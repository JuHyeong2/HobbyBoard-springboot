<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.hamo.member.model.mapper.MemberMapper">

	<insert id="insertMember" parameterType="Member">
		insert into member
		values(seq_member.nextval, #{memberName}, #{memberId}, #{memberPwd}, #{memberBirth}, #{memberGender}, #{memberPhone}, #{memberEmail}, #{memberNickname}, default, default, default)
	</insert>

	<select id="idCheck">
		select count(*)
		from member
		where member_id = #{userId} 
	</select>
	
	<select id="login">
		select *
		from member
		where member_id = #{memberId}
	</select>
	
<<<<<<< HEAD
	<select id="findId">
		select *
		from member
		where member_phone = #{phone}
	</select>

	<select id="selectMember">
		select *
		from member 
		where member_id = #{memberId} and status = 'Y'
	</select>
	
<!-- 	<update id="updateMember"> -->
<!-- 		update member  -->
<!-- 		set member_name = #{memberName},member_pwd = #{memberPwd}, member_birth = #{memberBirth}, member_gender = #{memberGender}, -->
<!-- 			member_phone = #{memberPhone}, member_email = #{memberEmail}, member_nickname = #{memberNickname} -->
<!-- 			where member_id = #{memberId} -->
			
<!--  			<if test="password != null and password != ''"> --> 
<!--  				,member_pwd = #{password} --> 
<!-- 			</if> -->
<!-- 			member_pwd = #{password} -->
					
<!-- 	</update> -->

	<select id="selectMyActivite" resultType="Board">
		select b.board_no, b.title, b.content, b.create_date, b.board_status, c.category_name
		from board b
			join participant p on b.board_no = p.board_no
			join member m on p.member_no = m.member_no
			join category c on b.category_no = c.category_no
			where m.member_id = #{memberId}
			order by b.create_date desc 
	</select>
	
	<select id="selectMyPost">
		select b.*, c.category_name, l.location_name
		from board b
			join category c on b.category_no = c.category_no
			join location l on b.location_no = l.location_no
			where b.member_no = (select member_no from member where member_id = #{memberId})
		order by b.create_date desc
	</select>
	
	<select id="participants">
		select m.*
		from member m
			join participant p on m.member_no = p.member_no
		where p.board_no = #{boardNo}
	</select>
	
	
	<update id="accept">
		update participant
		set status = 'a'
		where board_no = #{boardNo} and member_no = #{memberNo}
	</update>
	
	<update id="reject">
		update participant
		set status = 'r'
		where board_no = #{boardNo} and member_no = #{memberNo}
	</update>

<!-- 	<select id="memberId" resultType="Member"> -->
<!--         SELECT * FROM MEMBER WHERE MEMBER_ID = #{memberId} -->
<!--     </select> -->


	<update id="updateMember">
	update member
	set member_name = #{memberName}, member_birth = #{memberBirth}, member_gender = #{memberGender}, member_nickname = #{memberNickname},
		member_email = #{memberEmail}, member_phone = #{memberPhone},member_pwd = #{memberPwd}
	where member_id = #{memberId}	
    </update>
=======
	<select id="findId" parameterType="hashMap">
		select *
		from member
		where ${column} = #{value}
	</select>
	
	<update id="updatePwd">
		update member
		set member_pwd = #{memberPwd}
		where member_id = #{memberId}
	</update>
>>>>>>> 00f091061b9b4a441d7267fae366aa68c70a08ba

</mapper>